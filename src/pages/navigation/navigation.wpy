<template>
    <view>
        <view class="main-map">
            <map id="map-body" longitude="{{longitude}}" latitude="{{latitude}}" scale="{{scale}}" bindcontroltap="clickcontrols" controls="{{controls}}" markers="{{markers}}" show-location style="width:100%;height:{{height}}px" bindmarkertap="nothing">
            </map>
            <cover-view class="img-wrap">
                <cover-image class="img" src="./shadow-btm.png" />
            </cover-view>
        </view>
        <view class="closest-wrapper">
            <view class="closest-park">
                <view class="closest-header">当前选择</view>
                <view class="closest-body">
                    <view class="closest-left">
                        <view class="vertical-wrapper">
                            <view class="icon-wrapper">
                                <image style="width: 100%; height: 100%;" src="{{kind === 4 ? './person.png' : './company.png'}}" />
                            </view>
                            <view class="kind-desc">
                                {{kind === 3 ? "企业类" : "个人类"}}
                            </view>
                        </view>
                    </view>
                    <view class="closest-middle">
                        <view class="park-name">{{parkName}}</view>
                        <view class="park-price"> </view>
                        <view class="park-distence">距离您 {{distance}} 远</view>
                    </view>
                    <view class="closest-right">
                        <view class="navigate-btn">
                            <navigateBtn class="override-button" type="primary" size="small" :bindTap="navigatenow">开始导航</navigateBtn>
                        </view>
                    </view>
                </view>
            </view>
        </view>
    </view>
</template>

<style scoped>
.closest-wrapper {
    height: 240rpx;
}

.closest-park {
    height: 240rpx;
}

.closest-header {
    font-size: 32rpx;
    line-height: 60rpx;
    color: #888;
    text-align: center;
}

.closest-body {
    display: flex;
}

.closest-left {
    width: 130rpx;
    height: 180rpx;
    line-height: 180rpx;
    font-size: 0;
    text-align: center;
}

.vertical-wrapper {
    display: inline-block;
    margin: 0 auto;
    height: 130rpx;
    width: 100rpx;
    vertical-align: middle;
}

.icon-wrapper {
    width: 100rpx;
    height: 100rpx;
}

.kind-desc {
    line-height: 30rpx;
    font-size: 24rpx;
    color: #888;
    text-align: center;
}

.closest-middle {
    width: 480rpx;
}

.closest-right {
    width: 220rpx;
    padding-right: 20rpx;
    padding-top: 10rpx;
}

.override-button {
    /* padding: 0 10rpx; */
    width: 100%;
}

.padding {
    height: 30rpx;
}

.park-name {
    color: #353535;
    font-size: 36rpx;
    line-height: 80rpx;
    height: 80rpx;
    overflow: hidden;
    text-overflow: ellipsis;
    width: 100%;
}

.park-price {
    line-height: 40rpx;
    font-size: 30rpx;
    color: #888;
}

.park-distence {
    line-height: 40rpx;
    color: #888;
    font-size: 30rpx;
}

.main-map {
    position: relative;
}

.img-wrap {
    position: absolute;
    width: 100%;
    height: 4rpx;
    bottom: 0;
}

.img {
    width: 100%;
    height: 100%;
}
</style>

<script>
import wepy from 'wepy'
import Button from '../../components/button/button'

function getFlatternDistance(lat1, lng1, lat2, lng2) {
    var EARTH_RADIUS = 6378137.0 //单位M
    var PI = Math.PI

    function getRad(d) {
        return d * PI / 180.0
    }
    var f = getRad((lat1 + lat2) / 2)
    var g = getRad((lat1 - lat2) / 2)
    var l = getRad((lng1 - lng2) / 2)

    var sg = Math.sin(g)
    var sl = Math.sin(l)
    var sf = Math.sin(f)

    var s, c, w, r, d, h1, h2
    var a = EARTH_RADIUS
    var fl = 1 / 298.257

    sg = sg * sg
    sl = sl * sl
    sf = sf * sf

    s = sg * (1 - sl) + (1 - sf) * sl
    c = (1 - sg) * (1 - sl) + sf * sl

    w = Math.atan(Math.sqrt(s / c))
    r = Math.sqrt(s * c) / w
    d = 2 * w * a
    h1 = (3 * r - 1) / 2 / c
    h2 = (3 * r + 1) / 2 / s

    return d * (1 + fl * (h1 * sf * (1 - sg) - h2 * (1 - sf) * sg))
}

function formatDistance(num) {
    if (num < 1000) {
        return num.toFixed(0) + 'm'
    } else if (num > 1000) {
        return (num / 1000).toFixed(1) + 'km'
    }
}

export default class Navigation extends wepy.page {
    components = {
        navigateBtn: Button,
        parkBtn: Button
    }

    data = {
        currentLongitude: '',
        currentLatitude: '',
        scale: 16,
        latitude: '',
        longitude: '',
        parkName: '',
        distance: '正在计算距离',
        markers: [],
        controls: [
            {
                id: 2, //点击回到当前位置
                iconPath: '../../components/map/locate.png',
                position: {
                    left: 300 * wx.getStorageSync('MapScreenW'),
                    top: 320 * wx.getStorageSync('MapScreenH'),
                    width: 67 * wx.getStorageSync('MapScreenW'),
                    height: 60 * wx.getStorageSync('MapScreenW')
                },
                clickable: true
            }
        ],
        navigatenow: () => {
            wx.openLocation({
                name: this.parkName,
                latitude: this.latitude,
                longitude: this.longitude,
                scale: 18
            })
        },
        height: 555,
        kind: 5
    }
    onLoad(option) {
        console.log(option)
        let MapScreenW = wx.getStorageSync("MapScreenW")
        this.longitude = Number(option.longitude)
        this.latitude = Number(option.latitude)
        this.parkName = option.parkName
        this.kind = parseInt(option.kind)
        this.markers = [
            {
                title: this.parkName,
                latitude: this.latitude,
                longitude: this.longitude,
                iconPath: `./parking${this.kind}.png`,
                id: 1,
                width: 18 * MapScreenW,
                height: 18 * MapScreenW,
                callout: {
                    content: `${this.parkName}\n${this.distance}`,
                    fontSize: 14,
                    color: '#ffffff',
                    bgColor: '#353535',
                    padding: 8,
                    borderRadius: 4,
                    boxShadow: '4px 8px 16px 0 rgba(0)',
                    display: 'BYCLICK'
                }
            }
        ]
        this.$apply()
        wx.getSystemInfo({
            success: (data) => {
                console.log(data)
                this.height = data.windowHeight - data.windowWidth * 0.32
                this.$apply()
            },
            fail() {
                console.log('fail')
            }
        })
        wx.getLocation({
            //获得用户当前位置
            type: 'gcj02',
            success: (res) => {
                this.distance = formatDistance(
                    getFlatternDistance(
                        this.latitude,
                        this.longitude,
                        res.latitude,
                        res.longitude
                    )
                )
                this.markers[0].callout.content = `${this.parkName}\n${this.distance}`
                this.$apply()
            }
        })
    }

    methods = {
        clickcontrols(e) {
            if (e.controlId === 2) {
                //点击定位按钮回到当前位置
                this.mapCtx = wx.createMapContext('map-body')
                this.mapCtx.moveToLocation()
                this.scale = 18
            }
        },
        nothing: () => {
            console.log("marker click")
        }
    }

    config = {
        navigationBarTitleText: '车位导航'
    }
}
</script>
