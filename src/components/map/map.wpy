<template>
<view class="main-map">
    <map id="map-body" longitude="{{longitude}}" latitude="{{latitude}}" scale="{{scale}}"
        bindcontroltap="clickcontrols" controls="{{controls}}" 
        markers="{{markers}}" bindmarkertap="markertap"
        show-location
        style="width:100%;height:{{height}}px">
    </map>
</view>
</template>

<style scoped>
</style>

<script>
import wepy from 'wepy'
export default class Map extends wepy.component {
    props = {
        height: {
            type: Number,
            default: 375
        },
        scale :{
            type: Number,
            default: 18
        }
    }
    data = {
        scale: 16,
        latitude: '',
        longitude: '',
        markers: [
            //做个循环 search获取到的进行id分配 然而不会写循坏的id分配和关闭程序后free掉id
            {
                iconPath: "../../components/map/parking.png",
                id: 1,
                latitude:41.65213,
                longitude:123.423030,
                width: 40*wx.getStorageSync("MapScreenW"),
                height: 40*wx.getStorageSync("MapScreenW"),
                callout:{
                    content:'我是个气泡\n我会显示价格\n还有剩余车位量',
                    fontSize:14,
                    color:'#ffffff',
                    bgColor:'#000000',
                    padding:8,
                    borderRadius:4,
                    boxShadow:'4px 8px 16px 0 rgba(0)',
                    display:"BYCLICK"
                }
            }
        ],
        controls: [
            /*{
                id: 1, //标记中心位置
                iconPath: '../../components/map/iamhere.png',
                position: {
                    left: 177.5 * wx.getStorageSync('MapScreenW'),
                    top: 177.5 * wx.getStorageSync('MapScreenH'),
                    width: 30 * wx.getStorageSync('MapScreenW'),
                    height: 40 * wx.getStorageSync('MapScreenW')
                },
                clickable: false
            },*/
            {
                id: 2, //点击回到当前位置
                iconPath: '../../components/map/locate.png',
                position: {
                    left: 20 * wx.getStorageSync('MapScreenW'),
                    top: 320 * wx.getStorageSync('MapScreenH'),
                    width: 40 * wx.getStorageSync('MapScreenW'),
                    height: 40 * wx.getStorageSync('MapScreenW')
                },
                clickable: true
            },
            {
                id: 3, //点击打开搜索界面
                iconPath: '../../components/map/search_bar.png',
                position: {
                    left: 320 * wx.getStorageSync('MapScreenW'),
                    top: 320 * wx.getStorageSync('MapScreenH'),
                    width: 40 * wx.getStorageSync('MapScreenW'),
                    height: 40 * wx.getStorageSync('MapScreenW')
                },
                clickable: true
            }
        ],
    }
    onLoad() {
        // wx.openSetting({
            // success: res => {
                // res.authSetting = {
                    // 'scope.userLocation': true
                // }
            // }
        // })
        wx.getLocation({
            //获得用户当前位置
            type: 'gcj02',
            success: res => {
                var latitude = res.latitude
                var longitude = res.longitude
                this.latitude = latitude
                this.longitude = longitude
                this.$apply()
                console.log(res)
            }
        })
    }

    /*getParkList() {
        //需要判断是否连入网络
        wx.request({
            url= this.data.ParkinglistUrl.getlist  //接口地址search
            data=  this.data.getParkList  //data要什么 我也不知道
            method=  'POST', // OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, CONNECT
            // header: {}, // 设置请求的 header 我也不知道是啥
            header=  {
                //我怎么什么都不知道 照着文档写好累哦
            },
            success: res =>{
                var message = res.data.message
                var statu = res.data.status
                wx.showToast({    //查询动画需不需要 有待商讨
                    title: '查询附近停车场:\n' + message,
                    icon: '../../components/map/success.png',
                    duration: 2000,
                })
                var parkList = res.data.result
                var markers = []
                for (var i=0;i<parkList.length;i++) {
                    var parkLat = Number(parkList[i].latitude)
                    var parkLong = Number(parkList[i].longitude)
                    var id = Number(parkList[i].park_id)  //search到的parklist数组
                    var marker={
                        latitude:parkLat,
                        longitude:parkLong,
                        iconPath: "../../components/map/parking.png",
                        id: id,
                        width: 40*wx.getStorageSync("MapScreenW"),
                        height: 40*wx.getStorageSync("MapScreenW"),
                        callout:{
                            content:'我是个气泡\n我会显示价格\n还有剩余车位量',  //callout的content数据传入
                            fontSize:14,
                            color:'#ffffff',
                            bgColor:'#000000',
                            padding:8,
                            borderRadius:4,
                            boxShadow:'4px 8px 16px 0 rgba(0)',
                            display:"BYCLICK"
                        }
                    }
                markers.push(marker)
                'markers' = markers
                }
                console.log(that.data.markers)
            },
        })
    }

    regionchange (e) {
        //得到地图中心点的位置
        this.mapCtx = wx.createMapContext('map-body')
        that.mapCtx.getCenterLocation({
            success :res => {
                //滑动屏幕 判断是否需要刷新“离我最近”的停车场
                var longitudeFix = res.longitude
                var latitudeFix = res.latitude
                if (e.type == "begin") {
                    console.log('same')
                }
                else {
                    console.log("change")
                    //这里大概是需要一个经纬度的重新定位
                    //靠着longitudeFix和latitudeFix来进行停车场距离比较大小
                    //可能会重新显示离我最近的停车场
                    if (that.data.emmmm){  //这里需要一个能否获得附近停车场的flag
                        that.getParkList() //刷新search的列表 动态刷新id分配
                    }
                }
            }
        })
    },*/

    methods = {
        markertap (e) {
            console.log(e.markerId)
            console.log(e.latitude)
            console.log(e.longitude)
        },
        clickcontrols(e) {
            if (e.controlId === 2) {
                //点击定位按钮回到当前位置
                this.mapCtx = wx.createMapContext('map-body')
                this.mapCtx.moveToLocation()
                this.scale = 16
            }if (e.controlId === 3) {
                //点击搜索按钮进入搜索界面
                wx.navigateTo({
                    url: '../search/search',
                    success: (res) => {
                        console.log(res)
                    },
                    fail: (err) => {
                        console.log(err)
                    }
                })
            }
        }
    }
}
</script>

